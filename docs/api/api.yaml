openapi: "3.0.0"
info:
  title: "Wutsi Security Server"
  description: |
    Wutsi Security Server. It provides the following features:

    - [JWT](https://jwt.io) Authentication
    - Application registration
  version: "1.0.0"

servers:
  - url: https://wutsi-security-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-security-server-prod.herokuapp.com
    description: Production

paths:
  /v1/keys:
    post:
      operationId: "create-key"
      description: |
        Create the server's key.
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeyResponse'
      tags:
        - Key Store

  /v1/keys/{id}:
    get:
      operationId: "get-key"
      description: |
        Return the current server's key.
        This key can be used for:
          - decrypting messages
          - verifying signatures
      parameters:
        - in: path
          name: id
          description: ID of the key
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyResponse'
      tags:
        - Key Store


  /v1/scopes:
    get:
      operationId: "search-scopes"
      description: |
        Return all the security scopes
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchScopeResponse'
      tags:
        - Scope

    post:
      operationId: "create-scope"
      description: |
        Create a new scope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScopeRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScopeResponse'
      tags:
        - Scope


  /v1/applications:
    get:
      operationId: "search-applications"
      description: Search applications
      parameters:
        - in: query
          name: name
          description: Name of the application
          schema:
            type: string
            nullable: true
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 20
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchApplicationResponse'
      tags:
        - Application
    post:
      operationId: "create-application"
      description: |
        Create a new application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
      tags:
        - Application


  /v1/applications/me:
    get:
      operationId: "application"
      description: Return the information of an application by it's API-key
      parameters:
        - in: header
          name: X-Api-Key
          description: Application API Key
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
      tags:
        - Application

  /v1/applications/{id}:
    get:
      operationId: "get-application"
      description: |
        Find an application
      parameters:
        - in: path
          name: id
          description: ID of the application
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
      tags:
        - Application

  /v1/applications/{id}/scopes:
    post:
      operationId: "grant-scopes"
      description: |
        Grant a scope to an application
      parameters:
        - in: path
          name: id
          description: ID of the application
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantScopeRequest'
      responses:
        200:
          description: Success
      tags:
        - Application


  /v1/auth:
    post:
      operationId: "authenticate"
      description: |
        Authenticate and returns a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        403:
          description: For Multi-Factor-Authentication, this error is returned in the 1st step of the authentication
        409:
          description: Authentication failed
      tags:
        - Authentication

components:
  schemas:
    CreateKeyResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the key created

    GetKeyResponse:
      type: object
      properties:
        key:
          type: object
          $ref: "#/components/schemas/Key"

    SearchScopeResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            $ref: "#/components/schemas/Scope"

    CreateApplicationRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the application
        title:
          type: string
          description: Human friendly title of the application (30 character or less)
          maxLength: 30
        description:
          type: string
          description: Description of the application
          nullable: true
        securityLevel:
          type: integer
          description: Security Level of the application
        configUrl:
          type: string
          description: URL of the application configuration panel
          nullable: true
        homeUrl:
          type: string
          description: URL of the application home page
          nullable: true
        scopeNames:
          type: array
          items:
            type: string
      required:
        - name
        - title

    CreateApplicationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the application created
        api-key:
          type: string
          format: uuid
          description: API-Key of the application created

    GetApplicationResponse:
      type: object
      properties:
        application:
          type: object
          $ref: "#/components/schemas/Application"

    SearchApplicationResponse:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationSummary"

    AuthenticationRequest:
      type: object
      properties:
        type:
          type: string
          description: |
            Authentication method. The authentication method supported are:
            - `application`: For authenticating an application
            - `sms`: Multi Factor Authentication of users via SMS
              - The user enters his phone number
              - The user receives via SMS a verification code
              - Then the user enters the verification code to complete the authentication
            - `runas`: For application to authenticate a given user.
              This authentication type is restricted to a limitted set of applications.
          enum:
            - application
            - sms
            - runas
        apiKey:
          type: string
          nullable: true
          description: |
            Application API Key. **REQUIRED** if the `type=application` or `type=runas`
        phoneNumber:
          type: string
          description: |
            Phone number in the [E164](https://en.wikipedia.org/wiki/E.164) format.
            **REQUIRED** if the `type=sms` or `type=runas`
        mfaToken:
          type: string
          description: |
            Multi Factor Token. Must be provided for validating the verification code.
        verificationCode:
          type: string
          description: |
            Verification code. REQUIRED when `mfaToken` is provided
      required:
        - type

    AuthenticationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the login session
        created:
          type: string
          format: date-time
        expires:
          type: string
          format: date-time
        accessToken:
          type: string
          description: Access token

    CreateScopeRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the scope
        description:
          type: string
          description: Description of the scope
        securityLevel:
          type: integer
          description: Security level required to be granted this scope
      required:
        - name

    CreateScopeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the scope created

    GrantScopeRequest:
      type: object
      properties:
        scopeNames:
          type: array
          items:
            type: string
      required:
        - scopeNames


    ApplicationSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the application
        apiKey:
          type: string
          description: Application API key
        name:
          type: string
          description: Name of the application
        title:
          type: string
          description: Human friendly title of the application (30 character or less)
        description:
          type: string
          description: Description of the application
          nullable: true
        securityLevel:
          type: integer
          description: Security Level of the application
        configUrl:
          type: string
          description: URL of the application configuration panel
          nullable: true
        homeUrl:
          type: string
          description: URL of the application home page
          nullable: true
        active:
          type: boolean
          description: Is the application active or not?
        created:
          type: string
          format: date-time
          description: Application creation date
        updated:
          type: string
          format: date-time
          description: Application modification date

    Application:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the application
        apiKey:
          type: string
          description: Application API key
        name:
          type: string
          description: Name of the application
        title:
          type: string
          description: Human friendly title of the application (30 character or less)
        description:
          type: string
          description: Description of the application
          nullable: true
        securityLevel:
          type: integer
          description: Security Level of the application
        configUrl:
          type: string
          description: URL of the application configuration panel
          nullable: true
        homeUrl:
          type: string
          description: URL of the application home page
          nullable: true
        active:
          type: boolean
          description: Is the application active or not?
        created:
          type: string
          format: date-time
          description: Application creation date
        updated:
          type: string
          format: date-time
          description: Application modification date
        scopes:
          type: array
          items:
            $ref: "#/components/schemas/Scope"

    Key:
      type: object
      properties:
        algorithm:
          type: string
          description: Name of the security algorithm
        content:
          type: string
          description: Content of the key, based-64 encoded

    Scope:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the scope
        name:
          type: string
          description: Name of the scope
        description:
          type: string
          description: Description of the scope
          nullable: true
        securityLevel:
          type: integer
          description: Security Level required to get this scope
        active:
          type: boolean
          description: Is the scope active or not?
