openapi: "3.0.0"
info:
  title: "Wutsi Security Server"
  description: |
    Wutsi Security Server. It provides the following features:

    - [JWT](https://jwt.io) authentication
    - Application registration
  version: "1.0.0"

servers:
  - url: https://wutsi-security-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-security-server-prod.herokuapp.com
    description: Production

paths:
  /v1/keys:
    get:
      operationId: "get-key"
      description: |
        Return the current server's key.
        This key can be used for:
          - decrypting messages
          - verifying signatures
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyResponse'
      tags:
        - Security

    post:
      operationId: "create-key"
      description: |
        Create the server's key.
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeyResponse'
      tags:
        - Security


  /v1/scopes:
    get:
      operationId: "search-scopes"
      description: |
        Return all the security scopes
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchScopeResponse'
      tags:
        - Security


  /v1/applications:
    post:
      operationId: "create-application"
      description: |
        Create a new application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
      tags:
        - Security

#  /v1/applications/{id}:
#    get:
#      operationId: "get-application"
#      description: |
#        Find an application
#      parameters:
#        - in: path
#          name: id
#          description: ID of the application
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetApplicationResponse'
#      tags:
#        - Security

components:
  schemas:
    CreateKeyResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the key created

    GetKeyResponse:
      type: object
      properties:
        key:
          type: object
          $ref: "#/components/schemas/Key"

    Key:
      type: object
      properties:
        algorithm:
          type: string
          description: Name of the security algorithm
        content:
          type: string
          description: Content of the key, based-64 encoded


    SearchScopeResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            $ref: "#/components/schemas/Scope"

    Scope:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the scope
        name:
          type: string
          description: Name of the scope
        description:
          type: string
          description: Description of the scope
          nullable: true
        securityLevel:
          type: integer
          description: Security Level required to get this scope
        active:
          type: boolean
          description: Is the scope active or not?

    CreateApplicationRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the application
        title:
          type: string
          description: Human friendly title of the application
        description:
          type: string
          description: Description of the application
          nullable: true
        securityLevel:
          type: integer
          description: Security Level of the application
        iconUrl:
          type: string
          description: URL of the application icon
          nullable: true
        configUrl:
          type: string
          description: URL of the application configuration panel
          nullable: true
        homeUrl:
          type: string
          description: URL of the application home page
          nullable: true
        scopeNames:
          type: array
          items:
            type: string
      required:
        - name
        - title

    CreateApplicationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the application created
        api-key:
          type: string
          format: uuid
          description: API-Key of the application created

#    GetApplicationResponse:
#      type: object
#      properties:
#        application:
#          $ref: "#/components/schemas/Application"
#
#    Application:
#      type: object
#      properties:
#        id:
#          type: integer
#          format: int64
#          description: ID of the application
#        name:
#          type: string
#          description: Name of the application
#        description:
#          type: string
#          description: Description of the application
#          nullable: true
#        securityLevel:
#          type: integer
#          description: Security Level of the application
#        active:
#          type: boolean
#          description: Is the application active or not?
#        scopes:
#          type: array
#          items:
#            $ref: "#/components/schemas/Scope"
